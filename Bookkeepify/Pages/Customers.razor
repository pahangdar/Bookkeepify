@page "/customers"
@attribute [Authorize]

<PageTitle>Customers</PageTitle>
<ConfirmationDialog IsVisible="@isConfirmationDialogVisible"
                    OnConfirm="DeleteConfirmed"
                    Title="Delete Customer Confirmation"
                    Message="@deleteMessage" />

@if (ShowNewEditPanel)
{
    <CustomersNewEdit SelectedCustomer="@selectedCustomer" OnSave="HandleSaveResult" />
}

<h1>Customers</h1>


@if (!ShowNewEditPanel)
{
    <button class="btn btn-success btn-lg" @onclick="NewCustomer">
        <i class="oi oi-plus"></i>&nbsp;New Customer
    </button>
}


@if (customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Address</th>
                <th>Phone</th>
                <th>Email</th>
                <th>Account</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.Name</td>
                    <td>@customer.Address</td>
                    <td>@customer.Phone</td>
                    <td>@customer.Email</td>
                    <td>@customer.Account.Name</td>
                    <td>
                        <button class="btn btn-primary btn-sm"
                                @onclick="() => EditCustomer(customer)"
                                data-bs-toggle="tooltip"
                                data-bs-placement="top"
                                title="Edit"
                                disabled="@ShowNewEditPanel">
                            <i class="oi oi-pencil"></i>
                        </button>
                        <button class="btn btn-danger btn-sm"
                                @onclick="() => ShowConfirmationDialog(customer)"
                                data-bs-toggle=" tooltip"
                                data-bs-placement="top"
                                title="Delete"
                                disabled="@ShowNewEditPanel">
                            <i class="oi oi-trash"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@using Bookkeepify.Models
@using Bookkeepify.Services
@using Microsoft.EntityFrameworkCore
@inject CustomerService CustomerService


@code {
    private List<Customer> customers;
    private Customer selectedCustomer;

    private Boolean ShowNewEditPanel = false;

    private bool isConfirmationDialogVisible = false;
    private string deleteMessage = "";

    protected override async Task OnInitializedAsync()
    {
        await RefreshCustomers();
    }

    private void NewCustomer()
    {
        ShowNewEditPanel = true;
        selectedCustomer = null;
    }

    private void EditCustomer(Customer customer)
    {
        ShowNewEditPanel = true;
        selectedCustomer = customer;
    }

    private void ShowConfirmationDialog(Customer customer)
    {
        selectedCustomer = customer;
        if (selectedCustomer != null)
        {
            deleteMessage = $"Are you sure you want to delete '<strong>{selectedCustomer.Name}</strong>' ?";
            isConfirmationDialogVisible = true;
        }
    }

    private async Task DeleteConfirmed(bool isConfirmed)
    {
        isConfirmationDialogVisible = false;

        if (isConfirmed)
        {
            await CustomerService.DeleteCustomerAsync(selectedCustomer.Id);
            await RefreshCustomers(); // Refresh Customer list after deletion
            deleteMessage = "";
        }
    }

    private async Task RefreshCustomers()
    {
        customers = await CustomerService.GetCustomersAsync();
    }

    private async Task HandleSaveResult(bool isSaved)
    {
        ShowNewEditPanel = false;

        if (isSaved)
        {
            await RefreshCustomers();
            StateHasChanged(); // Notify Blazor to re-render the UI
        }
        else
        {
            // Cancel was selected
        }
    }

}
